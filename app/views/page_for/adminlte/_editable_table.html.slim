
table class="table table-condensed"
  thead
    tr
      - builder.inputs.each do |i|
        th class=i[:class]
          = i[:field].to_s.titleize
      -if builder.delete_if_can
        th
          |
      th
        |

    tbody id=builder.numerous_id
      - builder.f.simple_fields_for builder.has_many_method, builder.data, wrapper: false do |sf|
        tr class=builder.has_many_method
          - builder.inputs.each do |i|
            td class=i[:class]
              = sf.input_field i[:field], *i[:args]
          -if builder.delete_if_can
            td
              -if builder.context.can? :delete, sf.object
                = sf.link_to_remove "Remove"
              -else
                | no delete
          td
            = sf.input_field :id, as: 'hidden'
            /= sf.input_field builder.reflection.foreign_key
- if false
  div.editable_table id=builder.table_id
    .row.hidden_xs
      - builder.inputs.each do |i|
        div class="#{i[:field].to_s}"
          = i[:field].to_s.titleize
    - 0.upto(30).each do |x|
      - builder.f.object.send(builder.has_many_method).new
    - builder.data.each do |child|
      - builder.f.fields_for child, wrapper: false do |sf|
        .row.fields
          - builder.inputs.each do |i|
            div class="#{i.class}"
              = sf.input_field i[:field], *i[:args]
              = i[:field].to_s.titleize
          -if builder.delete_if_can
            .col_md_2
              -if builder.context.can? :delete, sf.object
                = sf.link_to_remove "Remove"
              -else
                | no delete

/- ---------- USES Numerous.js javascript library to copy template --------------
- unless builder.options[:disable_add]
  table
    tbody
      tr id="fields-for-#{builder.numerous_id}" class="numerous"
        -builder.f.simple_fields_for builder.has_many_method, builder.new_record, child_index: 'replace_this', wrapper: false do |sf|
          - builder.inputs.each do |i|
            td class=i[:class]
              = sf.input_field i[:field], *i[:args]


          -if builder.delete_if_can
            td
              -if builder.context.can? :delete, sf.object
                = sf.link_to_remove "Remove"
              -else
                | no delete
          td
            = sf.input_field :id, as: 'hidden'
            /= sf.input_field builder.reflection.foreign_key, value: builder.f.object.id


  div.editable_table_for_add
    = link_to "Add #{builder.reflection.class_name.to_s.titleize}", '#null', id: "add-to-#{builder.numerous_id}"
