
table id=builder.table_id class="table table-condensed"
  thead
    tr
      - builder.inputs.each do |i|
        th
          = i[:field].to_s.titleize
  tbody
    - 0.upto(30).each do |x|
      - builder.f.object.send(builder.has_many_method).new
    - builder.f.object.send(builder.has_many_method).each do |child|
      - builder.f.fields_for child, wrapper: false do |sf|
        tr class="fields" data-etable="#{sf.object.try(:id) || builder.unique_new_flag}"
          - builder.inputs.each do |i|
            td
              = sf.input_field i[:field], *i[:args]
          -if builder.delete_if_can
            td
              -if builder.context.can? :delete, sf.object
                = sf.link_to_remove "Remove"
              -else
                | no delete

javascript:
  function add_#{builder.table_id}() {
    $('tr[style="display: none;"][data-etable="#{builder.unique_new_flag}"]:first').show();
  }

  $("tr[data-etable='#{builder.unique_new_flag}']").hide();

p
  a href="javascript: add_#{builder.table_id}();" class="btn btn-default"
    | Add #{builder.has_many_method.to_s.singularize.titleize}
